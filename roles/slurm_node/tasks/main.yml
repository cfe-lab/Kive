---

- name: create slurm user
  become: true
  user:
    name: slurm
    system: yes
    create_home: no
    uid: 9634

- name: create slurm data directories
  become: true
  loop:
    - /var/log/slurm
    - /var/lib/slurm
    - /etc/slurm
  file:
    path: "{{ item }}"
    state: directory
    owner: slurm
    group: slurm

- name: add slurm config files
  become: true
  block:
    - name: copy cgroup config file
      notify: reconfigure slurm
      copy:
        src: cgroup.conf
        dest: /etc/slurm/
        owner: slurm
        group: slurm
        mode: "644"
    - name: generate and copy slurm config file
      notify: reconfigure slurm
      template:
        src: slurm.conf.j2
        dest: /etc/slurm/slurm.conf
        owner: slurm
        group: slurm
        mode: "644"


- name: install slurmd
  become: true
  block:
    - name: install slurm from rpm files
      dnf:
        disable_gpg_check: yes  # We built these rpm files, so they're unsigned.
        name:
          - "{{ slurmbuilddir }}/rpmbuild/RPMS/x86_64/slurm-20.02.2-1.el8.x86_64.rpm"
          - "{{ slurmbuilddir }}/rpmbuild/RPMS/x86_64/slurm-slurmd-20.02.2-1.el8.x86_64.rpm"
    - name: fix slurmd pidfile path in systemd unit
      replace:
        path: /usr/lib/systemd/system/slurmd.service
        regexp: /var/run/slurmd.pid
        replace: /var/run/slurm/slurmd.pid
    - name: Create /var/run/slurm folder
      blockinfile:
        path: /usr/lib/systemd/system/slurmd.service
        insertafter: \[Service\]
        block: |
          RuntimeDirectory=slurm

    - name: enable slurmd service
      systemd:
        daemon_reload: true  # necessary because we edited the unit file
        name: slurmd
        state: started
        enabled: true


- name: network drive mounts
  become: true
  block:
  - loop: "{{ network_mounts }}"
    name: Load network drive mounts from env_vars.yml
    ansible.posix.mount:
      path: "{{ item.path }}"
      src: "{{ item.src }}"
      fstype: "{{ item.fstype }}"
      state: "{{ item.state }}"
      opts: "{{ item.opts }}"
