---

- name: create kive user
  become: true
  user:
    name: kive
    system: yes
    uid: 762  # random uid in system uid range (200, 999); hard-coded for consistency across hosts


# NOTE(nknight): this is done with `file` instead of during user creation so that we
# can set the permissions explicitly.
- name: create kive home directory
  file:
    path: /home/kive/
    state: directory
    mode: "go-rx"
    group: kive
    owner: kive


- name: create kive app directories
  become: true
  loop:
    - /etc/kive/
    - /var/kive/
    - /var/log/kive/
    - "{{ kive_media_root }}"
  file:
    path: "{{ item }}"
    state: directory
    mode: "2770"
    owner: kive
    group: kive


- name: kive environment configuration
  become: true
  become_user: kive
  block:
    - name: set kive environment varialbes
      blockinfile:
        path: /home/kive/.bash_profile
        block: |
          export KIVE_DB_NAME={{ kive_db_name }}
          export KIVE_DB_USER={{ kive_db_user }}
          export KIVE_DB_HOST={{ kive_db_host }}
          export KIVE_DB_PASSWORD={{ kive_db_password }}

          export KIVE_MEDIA_ROOT={{ kive_media_root }}
          export KIVE_STATIC_ROOT={{ kive_static_root }}
          export KIVE_SLURM_PATH={{ kive_slurm_path }}
        create: true  # create the file if it doesn't exist
        backup: true
        owner: kive
        group: kive


- name: fetch kive source code
  become: true
  git:
    dest: "{{ kive_root }}"
    repo: https://github.com/cfe-lab/Kive.git
    version: "{{ kive_version | default('master') }}"
    update: "{{ update_kive_source | default('no') }}"


- name: kive package dependencies
  become: true
  dnf:
    name:
      - platform-python-devel
      - sqlite-devel
      - words
      - lsof
      - graphviz
      - graphviz-devel


- name: install kive python dependencies
  become: true
  block:
    - name: create directory for virtualenv
      file:
        path: "{{ kive_venv }}"
        state: directory
    - name: copy requirements file to track changes
      register: kive_requirements
      copy:
        dest: "{{ kive_venv }}/requirements.txt"
        src: "{{ kive_root }}/requirements.txt"
    - name: kive python dependencies
      when: kive_requirements.changed
      pip:
        requirements: "{{ kive_root }}/requirements.txt"
        virtualenv: "{{ kive_venv }}"


- name: install postgres database libraries
  become: true
  block:
    - name: add postgresl package repository
      dnf:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    - name: check if postgres is disabled
      register: is_builtin_postgresql_disabled
      # Check mode means this never writes the line, just checks if it's there.
      check_mode: yes
      lineinfile:
        name: /etc/dnf/modules.d/postgresql.module
        line: state=disabled
    - name: disable built-in postgres module
      when: (is_builtin_postgresql_disabled is changed) or (is_builtin_postgresql_disabled is failed)
      command:
        cmd: dnf -qy module disable postgresql
        warn: false  # dnf module doesn't include this sub-command, so have to use command directly
    - name: install client libraries
      dnf:
        update_cache: true
        name: postgresql12

- name: configure mail service for error logging
  systemd:
    name: postfix
    state: started
    enabled: true