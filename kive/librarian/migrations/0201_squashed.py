# Generated by Django 2.2.18 on 2021-04-07 20:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import librarian.models
import re


class Migration(migrations.Migration):

    replaces = [('librarian', '0101_squashed'), ('librarian', '0102_relink_apps'), ('librarian', '0103_dataset_last_time_checked'), ('librarian', '0104_auto_20161014_1132'), ('librarian', '0103_index_date_created'), ('librarian', '0105_merge'), ('librarian', '0106_dataset_name_not_blank'), ('librarian', '0107_dataset_dataset_size'), ('librarian', '0108_dataset_is_external_missing'), ('librarian', '0109_dataset_is_uploaded'), ('librarian', '0110_mark_uploads'), ('librarian', '0111_is_uploaded_false'), ('librarian', '0112_remove_dataset_file_source'), ('librarian', '0113_remove_execrecord_generator'), ('librarian', '0114_drop_execrecord_and_structure')]

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
        ('transformation', '__first__'),
        ('metadata', '__first__'),
        ('metadata', '0101_squashed'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('archive', '0110_remove_runcomponent_execrecord'),
        ('datachecking', '0101_squashed'),
        ('archive', '0101_squashed'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MD5_checksum', models.CharField(blank=True, default='', help_text='Validates file integrity', max_length=64, validators=[django.core.validators.RegexValidator(message='MD5 checksum is not either 32 hex characters or blank', regex=re.compile('(^[0-9A-Fa-f]{32}$)|(^$)'))])),
                ('groups_allowed', models.ManyToManyField(blank=True, help_text='What groups have access?', related_name='librarian_dataset_has_access_to', to='auth.Group')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_allowed', models.ManyToManyField(blank=True, help_text='Which users have access?', related_name='librarian_dataset_has_access_to', to=settings.AUTH_USER_MODEL)),
                ('_redacted', models.BooleanField(default=False)),
                ('dataset_file', models.FileField(blank=True, default='', help_text='Physical path where datasets are stored', max_length=260, upload_to=librarian.models.get_upload_path)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, help_text='Date of Dataset creation.')),
                ('description', models.TextField(blank=True, help_text='Description of this Dataset.', max_length=1000)),
                ('name', models.CharField(blank=True, help_text='Name of this Dataset.', max_length=260)),
                ('external_path', models.CharField(blank=True, help_text='Relative path of the file within the specified external file directory', max_length=4096)),
            ],
            options={
                'ordering': ['-date_created', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ExternalFileDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Human-readable name for this external file directory', max_length=4096, unique=True)),
                ('path', models.CharField(help_text='Absolute path', max_length=4096)),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='externalfiledirectory',
            field=models.ForeignKey(blank=True, help_text='External file directory containing the data file', null=True, on_delete=django.db.models.deletion.CASCADE, to='librarian.ExternalFileDirectory', verbose_name='External file directory'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='dataset_file',
            field=models.FileField(blank=True, db_index=True, default='', help_text='Physical path where datasets are stored', max_length=260, upload_to=librarian.models.get_upload_path),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dataset',
            name='last_time_checked',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Date-time of last (external) dataset existence check.', null=True),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='date_created',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date of Dataset creation.'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='name',
            field=models.CharField(max_length=260),
        ),
        migrations.AddField(
            model_name='dataset',
            name='dataset_size',
            field=models.BigIntegerField(blank=True, help_text='Size of the dataset file in bytes.  If null, this has not been computed yet or there is no internally stored file.', null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_external_missing',
            field=models.BooleanField(default=False, help_text='True if the external file was missing when last checked.'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_uploaded',
            field=models.BooleanField(default=True, help_text='True if the file was uploaded, not an output.'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='is_uploaded',
            field=models.BooleanField(default=False, help_text='True if the file was uploaded, not an output.'),
        ),
    ]
