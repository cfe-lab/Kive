[
{
    "fields": {
        "description": "basic string type",
        "groups_allowed": [
            1
        ],
        "restricts": [],
        "users_allowed": [],
        "user": 1,
        "date_created": "2013-11-13T19:47:19.853Z",
        "prototype": null,
        "name": "string"
    },
    "model": "metadata.datatype",
    "pk": 1
},
{
    "fields": {
        "description": "basic boolean type",
        "groups_allowed": [
            1
        ],
        "restricts": [
            1
        ],
        "users_allowed": [],
        "user": 1,
        "date_created": "2013-11-13T19:47:19.856Z",
        "prototype": null,
        "name": "boolean"
    },
    "model": "metadata.datatype",
    "pk": 2
},
{
    "fields": {
        "description": "basic float type",
        "groups_allowed": [
            1
        ],
        "restricts": [
            1
        ],
        "users_allowed": [],
        "user": 1,
        "date_created": "2013-11-13T19:47:19.874Z",
        "prototype": null,
        "name": "float"
    },
    "model": "metadata.datatype",
    "pk": 3
},
{
    "fields": {
        "description": "basic integer type",
        "groups_allowed": [
            1
        ],
        "restricts": [
            3
        ],
        "users_allowed": [],
        "user": 1,
        "date_created": "2013-11-13T19:47:19.882Z",
        "prototype": null,
        "name": "integer"
    },
    "model": "metadata.datatype",
    "pk": 4
},
{
    "fields": {
        "description": "positive integer",
        "groups_allowed": [
            1
        ],
        "restricts": [
            4
        ],
        "users_allowed": [],
        "user": 1,
        "date_created": "2013-11-13T19:47:19.890Z",
        "prototype": null,
        "name": "natural number"
    },
    "model": "metadata.datatype",
    "pk": 5
},
{
    "fields": {
        "description": "String of IUPAC symbols representing either the primary protein sequence (amino acids) or a nucleotide sequence (RNA or DNA).  Only standard placeholders permitted (gap character '-', ambiguous amino acid '?', stop codon '*').",
        "groups_allowed": [
            1
        ],
        "restricts": [
            1
        ],
        "users_allowed": [],
        "user": 1,
        "date_created": "2014-06-10T16:36:44.948Z",
        "prototype": null,
        "name": "molecular sequence"
    },
    "model": "metadata.datatype",
    "pk": 6
},
{
    "fields": {
        "description": "A string of IUPAC symbols representing DNA or RNA, including ambiguous bases.",
        "groups_allowed": [
            1
        ],
        "restricts": [
            1
        ],
        "users_allowed": [],
        "user": 1,
        "date_created": "2014-06-10T18:32:15.268Z",
        "prototype": null,
        "name": "nucleotide sequence"
    },
    "model": "metadata.datatype",
    "pk": 7
},
{
    "fields": {
        "datatype": 5,
        "ruletype": "minval",
        "rule": "1"
    },
    "model": "metadata.basicconstraint",
    "pk": 1
},
{
    "fields": {
        "datatype": 6,
        "ruletype": "regexp",
        "rule": "[A-Za-z*?-]*"
    },
    "model": "metadata.basicconstraint",
    "pk": 3
},
{
    "fields": {
        "datatype": 7,
        "ruletype": "regexp",
        "rule": "[ACGTUNacgtuWRKYSMBDHVNwrkysmbdhvn-]*"
    },
    "model": "metadata.basicconstraint",
    "pk": 5
},
{
    "fields": {
        "datatype": 1,
        "column_idx": 1,
        "column_name": "to_test",
        "blankable": true,
        "compounddatatype": 1
    },
    "model": "metadata.compounddatatypemember",
    "pk": 1
},
{
    "fields": {
        "datatype": 5,
        "column_idx": 1,
        "column_name": "failed_row",
        "blankable": false,
        "compounddatatype": 2
    },
    "model": "metadata.compounddatatypemember",
    "pk": 2
},
{
    "fields": {
        "datatype": 1,
        "column_idx": 1,
        "column_name": "example",
        "blankable": true,
        "compounddatatype": 3
    },
    "model": "metadata.compounddatatypemember",
    "pk": 3
},
{
    "fields": {
        "datatype": 2,
        "column_idx": 2,
        "column_name": "valid",
        "blankable": false,
        "compounddatatype": 3
    },
    "model": "metadata.compounddatatypemember",
    "pk": 4
},
{
    "fields": {
        "datatype": 1,
        "column_idx": 1,
        "column_name": "FASTA header",
        "blankable": true,
        "compounddatatype": 4
    },
    "model": "metadata.compounddatatypemember",
    "pk": 5
},
{
    "fields": {
        "datatype": 6,
        "column_idx": 2,
        "column_name": "FASTA sequence",
        "blankable": true,
        "compounddatatype": 4
    },
    "model": "metadata.compounddatatypemember",
    "pk": 6
},
{
    "model": "metadata.compounddatatype",
    "pk": 1,
    "fields": {
        "user": 1,
        "name": "(to_test: string?)",
        "users_allowed": [],
        "groups_allowed": [
            1
        ]
    }
},
{
    "model": "metadata.compounddatatype",
    "pk": 2,
    "fields": {
        "user": 1,
        "name": "(failed_row: natural number)",
        "users_allowed": [],
        "groups_allowed": [
            1
        ]
    }
},
{
    "model": "metadata.compounddatatype",
    "pk": 3,
    "fields": {
        "user": 1,
        "name": "(example: string?, valid: boolean)",
        "users_allowed": [],
        "groups_allowed": [
            1
        ]
    }
},
{
    "model": "metadata.compounddatatype",
    "pk": 4,
    "fields": {
        "user": 1,
        "name": "(FASTA header: string?, FASTA sequence: molecular sequence?)",
        "users_allowed": [],
        "groups_allowed": [
            1
        ]
    }
}
]
