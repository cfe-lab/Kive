# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-07-31 23:18
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Singularity container file', upload_to='CodeResources', verbose_name='Container file')),
                ('tag', models.CharField(help_text='Git tag or revision name', max_length=128, verbose_name='Tag')),
                ('description', models.CharField(blank=True, max_length=1000, verbose_name='Description')),
                ('md5', models.CharField(blank=True, help_text='Validates file integrity', max_length=64, validators=[django.core.validators.RegexValidator(message='MD5 checksum is not either 32 hex characters or blank', regex=re.compile('(^[0-9A-Fa-f]{32}$)|(^$)'))])),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When this was added to Kive.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContainerFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('git', models.CharField(blank=True, help_text='URL of Git repository that containers were built from', max_length=2000, verbose_name='Git URL')),
                ('groups_allowed', models.ManyToManyField(blank=True, help_text='What groups have access?', related_name='container_containerfamily_has_access_to', to='auth.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_allowed', models.ManyToManyField(blank=True, help_text='Which users have access?', related_name='container_containerfamily_has_access_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='container',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='containers', to='container.ContainerFamily'),
        ),
        migrations.AddField(
            model_name='container',
            name='groups_allowed',
            field=models.ManyToManyField(blank=True, help_text='What groups have access?', related_name='container_container_has_access_to', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='container',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='container',
            name='users_allowed',
            field=models.ManyToManyField(blank=True, help_text='Which users have access?', related_name='container_container_has_access_to', to=settings.AUTH_USER_MODEL),
        ),
    ]
