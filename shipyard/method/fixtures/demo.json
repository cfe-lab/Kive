[
{
    "pk": 2, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Take in two integers, output sums and products.", 
        "name": "script_1_sum_and_products", 
        "filename": "script_1_sum_and_products.py"
    }
},
{
    "pk": 2, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Take in two integers, output sums and products.", 
        "coderesource": 2, 
        "MD5_checksum": "5d454fec2eb55b5e643afa6c988ac974", 
        "content_file": "CodeResources/script_1_sum_and_products.py_20140807145144", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-07T21:51:44.301Z"
    }
},
{
    "pk": 2, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 2, 
        "deterministic": true, 
        "driver": 2, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 2, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "Sums and Products", 
        "description": ""
    }
},
{
    "pk": 3, 
    "model": "method.coderesource", 
    "fields": {
        "description": "To make pipeline portable, allow user to specify local paths and thread counts.", 
        "name": "settings", 
        "filename": "settings.py"
    }
},
{
    "pk": 4, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Standard configuration for logging", 
        "name": "miseq_logging", 
        "filename": "miseq_logging.py"
    }
},
{
    "pk": 5, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Reference sequences", 
        "name": "projects.json", 
        "filename": "projects.json"
    }
},
{
    "pk": 6, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Shipyard-style bowtie2\r\nRun bowtie2 on paired-end FASTQ data sets with user-supplied *.bt2\r\nbowtie2 SAM format output to <stdout> for redirection via subprocess.Popen\r\nSort outputs by refname.\r\nConvert to CSV format and write to file.", 
        "name": "prelim_map", 
        "filename": "prelim_map.py"
    }
},
{
    "pk": 3, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "To make pipeline portable, allow user to specify local paths and thread counts.", 
        "coderesource": 3, 
        "MD5_checksum": "f3d84d1555896e94d8e4ab0ee7c762b5", 
        "content_file": "CodeResources/settings.py_20140811115944", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T18:59:44.931Z"
    }
},
{
    "pk": 4, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Standard configuration for logging", 
        "coderesource": 4, 
        "MD5_checksum": "d98e48f57cc791eb7b68230af283dd3b", 
        "content_file": "CodeResources/miseq_logging.py_20140811120034", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T19:00:34.738Z"
    }
},
{
    "pk": 5, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Reference sequences", 
        "coderesource": 5, 
        "MD5_checksum": "fd2fd44aabab5a12fdbe5d05714a6cba", 
        "content_file": "CodeResources/projects.json", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T19:01:23.014Z"
    }
},
{
    "pk": 6, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Shipyard-style bowtie2\r\nRun bowtie2 on paired-end FASTQ data sets with user-supplied *.bt2\r\nbowtie2 SAM format output to <stdout> for redirection via subprocess.Popen\r\nSort outputs by refname.\r\nConvert to CSV format and write to file.", 
        "coderesource": 6, 
        "MD5_checksum": "2baf0f9454e52c150e53655a5bd22367", 
        "content_file": "CodeResources/prelim_map.py_20140811120247", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T19:02:47.539Z"
    }
},
{
    "pk": 1, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 3, 
        "coderesourcerevision": 6, 
        "depFileName": ""
    }
},
{
    "pk": 2, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 4, 
        "coderesourcerevision": 6, 
        "depFileName": ""
    }
},
{
    "pk": 3, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 5, 
        "coderesourcerevision": 6, 
        "depFileName": ""
    }
},
{
    "pk": 4, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 3, 
        "deterministic": true, 
        "driver": 6, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 3, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "prelim_map", 
        "description": "Shipyard-style bowtie2\r\nRun bowtie2 on paired-end FASTQ data sets with user-supplied *.bt2\r\nbowtie2 SAM format output to <stdout> for redirection via subprocess.Popen\r\nSort outputs by refname.\r\nConvert to CSV format and write to file."
    }
},
{
    "pk": 7, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Shipyard-style MiSeq pipeline, step 2\r\nTakes preliminary SAM as CSV input.  Iterative re-mapping of reads from\r\noriginal FASTQ files.\r\nAlso report the number of reads mapped before and after processing.", 
        "name": "remap", 
        "filename": "remap.py"
    }
},
{
    "pk": 7, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Shipyard-style MiSeq pipeline, step 2\r\nTakes preliminary SAM as CSV input.  Iterative re-mapping of reads from\r\noriginal FASTQ files.\r\nAlso report the number of reads mapped before and after processing.", 
        "coderesource": 7, 
        "MD5_checksum": "39d2e6dcee3506ed11b76706d21c8680", 
        "content_file": "CodeResources/remap.py_20140811122443", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T19:24:43.487Z"
    }
},
{
    "pk": 4, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 3, 
        "coderesourcerevision": 7, 
        "depFileName": ""
    }
},
{
    "pk": 5, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 4, 
        "coderesourcerevision": 7, 
        "depFileName": ""
    }
},
{
    "pk": 6, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 5, 
        "coderesourcerevision": 7, 
        "depFileName": ""
    }
},
{
    "pk": 5, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 4, 
        "deterministic": true, 
        "driver": 7, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 4, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "remap", 
        "description": "Shipyard-style MiSeq pipeline, step 2\r\nTakes preliminary SAM as CSV input.  Iterative re-mapping of reads from\r\noriginal FASTQ files.\r\nAlso report the number of reads mapped before and after processing."
    }
},
{
    "pk": 8, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Conversion of SAM data into aligned format.", 
        "name": "sam2aln", 
        "filename": "sam2aln.py"
    }
},
{
    "pk": 8, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Conversion of SAM data into aligned format.", 
        "coderesource": 8, 
        "MD5_checksum": "44ecb64b5b210876aed6f7829f86430c", 
        "content_file": "CodeResources/sam2aln.py_20140811144919", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T21:32:06.239Z"
    }
},
{
    "pk": 7, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 3, 
        "coderesourcerevision": 8, 
        "depFileName": ""
    }
},
{
    "pk": 6, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 5, 
        "deterministic": true, 
        "driver": 8, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 5, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "sam2aln", 
        "description": "Conversion of SAM data into aligned format."
    }
},
{
    "pk": 10, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Perform pairwise alignment of sequence against a reference using the HyPhy shared library function AlignSequences().", 
        "name": "hyphyAlign", 
        "filename": "hyphyAlign.py"
    }
},
{
    "pk": 11, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Post-processing of short-read alignments.", 
        "name": "aln2counts", 
        "filename": "aln2counts.py"
    }
},
{
    "pk": 10, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Perform pairwise alignment of sequence against a reference using the HyPhy shared library function AlignSequences().", 
        "coderesource": 10, 
        "MD5_checksum": "3563b23f2e275d184865e2907e50034b", 
        "content_file": "CodeResources/hyphyAlign.py_20140811154128", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T22:41:28.990Z"
    }
},
{
    "pk": 11, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Post-processing of short-read alignments.", 
        "coderesource": 11, 
        "MD5_checksum": "c399c371de1a1d389d3466ee115b1150", 
        "content_file": "CodeResources/aln2counts.py_20140811154315", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T22:43:15.594Z"
    }
},
{
    "pk": 8, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 3, 
        "coderesourcerevision": 11, 
        "depFileName": ""
    }
},
{
    "pk": 10, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 4, 
        "coderesourcerevision": 11, 
        "depFileName": ""
    }
},
{
    "pk": 11, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 10, 
        "coderesourcerevision": 11, 
        "depFileName": ""
    }
},
{
    "pk": 7, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 6, 
        "deterministic": true, 
        "driver": 11, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 6, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "aln2counts", 
        "description": "Post-processing of short-read alignments."
    }
},
{
    "pk": 14, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Iterate through a CSV (produced by remap)\r\nRestrict to sequences of HIV env V3 (region == V3LOOP).\r\nApply Conan's implementation of the geno2pheno (g2p) coreceptor\r\ntropism prediction algorithm to each entry.  Output tuples of header,\r\ng2p score, FPR, and g2p-aligned protein sequence.", 
        "name": "sam_g2p", 
        "filename": "sam_g2p.rb"
    }
},
{
    "pk": 15, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Written by Conan", 
        "name": "pssm_lib", 
        "filename": "pssm_lib.rb"
    }
},
{
    "pk": 16, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Compiled version of alignment.cpp", 
        "name": "alignment", 
        "filename": "alignment.so"
    }
},
{
    "pk": 17, 
    "model": "method.coderesource", 
    "fields": {
        "description": "", 
        "name": "g2p.matrix", 
        "filename": "g2p.matrix"
    }
},
{
    "pk": 18, 
    "model": "method.coderesource", 
    "fields": {
        "description": "", 
        "name": "g2p_fpr.txt", 
        "filename": "g2p_fpr.txt"
    }
},
{
    "pk": 19, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Shell script to  launch Ruby version", 
        "name": "sam_g2p.sh", 
        "filename": "sam_g2p.sh"
    }
},
{
    "pk": 14, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Iterate through a CSV (produced by remap)\r\nRestrict to sequences of HIV env V3 (region == V3LOOP).\r\nApply Conan's implementation of the geno2pheno (g2p) coreceptor\r\ntropism prediction algorithm to each entry.  Output tuples of header,\r\ng2p score, FPR, and g2p-aligned protein sequence.", 
        "coderesource": 14, 
        "MD5_checksum": "cc361585b84ffd4b92b12153f4e563f2", 
        "content_file": "CodeResources/sam_g2p.rb_20140811165352", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T23:53:52.052Z"
    }
},
{
    "pk": 15, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Written by Conan", 
        "coderesource": 15, 
        "MD5_checksum": "173be3144ccf7a6f073c85db53e25821", 
        "content_file": "CodeResources/pssm_lib.rb_20140811165447", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T23:54:47.460Z"
    }
},
{
    "pk": 16, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Compiled version of alignment.cpp", 
        "coderesource": 16, 
        "MD5_checksum": "334778bd1bdb04bb615d2029f45dab62", 
        "content_file": "CodeResources/alignment.so_20140811165911", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T23:59:11.169Z"
    }
},
{
    "pk": 17, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "", 
        "coderesource": 17, 
        "MD5_checksum": "b4c8b3013b1b6822d056f5958115f50a", 
        "content_file": "CodeResources/g2p.matrix_20140811165953", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-11T23:59:53.915Z"
    }
},
{
    "pk": 18, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "", 
        "coderesource": 18, 
        "MD5_checksum": "c7aad4c7db95f0fc797806895a76a449", 
        "content_file": "CodeResources/g2p_fpr.txt_20140811170012", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-12T00:00:12.535Z"
    }
},
{
    "pk": 19, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Shell script to  launch Ruby version", 
        "coderesource": 19, 
        "MD5_checksum": "6eed3db03077b725408f14ceb78c1c9f", 
        "content_file": "CodeResources/sam_g2p.sh_20140811170132", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-12T00:01:32.384Z"
    }
},
{
    "pk": 15, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 14, 
        "coderesourcerevision": 19, 
        "depFileName": ""
    }
},
{
    "pk": 16, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 15, 
        "coderesourcerevision": 19, 
        "depFileName": ""
    }
},
{
    "pk": 17, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 16, 
        "coderesourcerevision": 19, 
        "depFileName": ""
    }
},
{
    "pk": 18, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 17, 
        "coderesourcerevision": 19, 
        "depFileName": ""
    }
},
{
    "pk": 19, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 18, 
        "coderesourcerevision": 19, 
        "depFileName": ""
    }
},
{
    "pk": 9, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 8, 
        "deterministic": true, 
        "driver": 19, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 8, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "sam_g2p.sh", 
        "description": "Iterate through a CSV (produced by remap)\r\nRestrict to sequences of HIV env V3 (region == V3LOOP).\r\nApply Conan's implementation of the geno2pheno (g2p) coreceptor\r\ntropism prediction algorithm to each entry.  Output tuples of header,\r\ng2p score, FPR, and g2p-aligned protein sequence."
    }
},
{
    "pk": 21, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Plot coverage for each region in a sample.", 
        "name": "coverage_plots", 
        "filename": "coverage_plots.R"
    }
},
{
    "pk": 21, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Plot coverage for each region in a sample.", 
        "coderesource": 21, 
        "MD5_checksum": "0733e407edea9615008f1ceada3d017e", 
        "content_file": "CodeResources/coverage_plots.R_20140812114014", 
        "revision_number": 1, 
        "revision_DateTime": "2014-08-12T18:40:14.598Z"
    }
},
{
    "pk": 11, 
    "model": "method.method", 
    "fields": {
        "revision_parent": null, 
        "family": 9, 
        "deterministic": true, 
        "driver": 21, 
        "tainted": false, 
        "revision_number": 1
    }
},
{
    "pk": 9, 
    "model": "method.methodfamily", 
    "fields": {
        "name": "coverage_plots", 
        "description": "Plot coverage for each region in a sample."
    }
},
{
    "pk": 22, 
    "model": "method.coderesource", 
    "fields": {
        "description": "Load MiSeq project configurations from a JSON file.", 
        "name": "project_config", 
        "filename": "project_config.py"
    }
},
{
    "pk": 22, 
    "model": "method.coderesourcerevision", 
    "fields": {
        "revision_name": "Prototype", 
        "revision_parent": null, 
        "revision_desc": "Load MiSeq project configurations from a JSON file.", 
        "coderesource": 22, 
        "MD5_checksum": "c4866c13b2f7926c9c704523cceffec7", 
        "content_file": "CodeResources/project_config.py_20141203134458", 
        "revision_number": 1, 
        "revision_DateTime": "2014-12-03T21:44:58.852Z"
    }
},
{
    "pk": 20, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 22, 
        "coderesourcerevision": 6, 
        "depFileName": ""
    }
},
{
    "pk": 21, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 22, 
        "coderesourcerevision": 7, 
        "depFileName": ""
    }
},
{
    "pk": 22, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 22, 
        "coderesourcerevision": 11, 
        "depFileName": ""
    }
},
{
    "pk": 23, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 5, 
        "coderesourcerevision": 11, 
        "depFileName": ""
    }
},
{
    "pk": 24, 
    "model": "method.coderesourcedependency", 
    "fields": {
        "depPath": ".", 
        "requirement": 5, 
        "coderesourcerevision": 21, 
        "depFileName": ""
    }
}
]