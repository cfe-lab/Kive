[{"pk": 1, "model": "metadata.datatype", "fields": {"name": "string", "restricts": [], "date_created": "2013-11-13T19:47:19.853Z", "prototype": null, "description": "basic string type"}},
    {"pk": 2, "model": "metadata.datatype", "fields": {"name": "boolean", "restricts": [1], "date_created": "2013-11-13T19:47:19.856Z", "prototype": null, "description": "basic boolean type"}},
    {"pk": 3, "model": "metadata.datatype", "fields": {"name": "float", "restricts": [1], "date_created": "2013-11-13T19:47:19.874Z", "prototype": null, "description": "basic float type"}},
    {"pk": 4, "model": "metadata.datatype", "fields": {"name": "integer", "restricts": [3], "date_created": "2013-11-13T19:47:19.882Z", "prototype": null, "description": "basic integer type"}},
    {"pk": 5, "model": "metadata.datatype", "fields": {"name": "natural number", "restricts": [4], "date_created": "2013-11-13T19:47:19.890Z", "prototype": null, "description": "positive integer"}},
    {"pk": 6, "model": "metadata.datatype", "fields": {"name": "molecular sequence", "restricts": [1], "custom_constraint": null, "date_created": "2014-06-10T16:36:44.948Z", "prototype": null, "description": "String of IUPAC symbols representing either the primary protein sequence (amino acids) or a nucleotide sequence (RNA or DNA).  Only standard placeholders permitted (gap character '-', ambiguous amino acid '?', stop codon '*')."}},
    {"pk": 7, "model": "metadata.datatype", "fields": {"name": "nucleotide sequence", "restricts": [1], "custom_constraint": null, "date_created": "2014-06-10T18:32:15.268Z", "prototype": null, "description": "A string of IUPAC symbols representing DNA or RNA, including ambiguous bases."}},
    {"pk": 1, "model": "metadata.basicconstraint", "fields": {"datatype": 5, "ruletype": "minval", "rule": "1"}},
    {"pk": 2, "model": "metadata.basicconstraint", "fields": {"datatype": 6, "ruletype": "minlen", "rule": "1"}},
    {"pk": 3, "model": "metadata.basicconstraint", "fields": {"datatype": 6, "ruletype": "regexp", "rule": "[A-Za-z*?-]+"}},
    {"pk": 4, "model": "metadata.basicconstraint", "fields": {"datatype": 7, "ruletype": "minlen", "rule": "1"}},
    {"pk": 5, "model": "metadata.basicconstraint", "fields": {"datatype": 7, "ruletype": "regexp", "rule": "[ACGTUNacgtuWRKYSMBDHVNwrkysmbdhvn-]+"}},
    {"pk": 1, "model": "metadata.compounddatatypemember", "fields": {"datatype": 1, "column_idx": 1, "column_name": "to_test", "compounddatatype": 1}},
    {"pk": 2, "model": "metadata.compounddatatypemember", "fields": {"datatype": 5, "column_idx": 1, "column_name": "failed_row", "compounddatatype": 2}},
    {"pk": 3, "model": "metadata.compounddatatypemember", "fields": {"datatype": 1, "column_idx": 1, "column_name": "example", "compounddatatype": 3}},
    {"pk": 4, "model": "metadata.compounddatatypemember", "fields": {"datatype": 2, "column_idx": 2, "column_name": "valid", "compounddatatype": 3}},
    {"pk": 5, "model": "metadata.compounddatatypemember", "fields": {"datatype": 1, "column_idx": 1, "column_name": "FASTA header", "compounddatatype": 4}},
    {"pk": 6, "model": "metadata.compounddatatypemember", "fields": {"datatype": 6, "column_idx": 2, "column_name": "FASTA sequence", "compounddatatype": 4}},
    {"pk": 4, "model": "metadata.compounddatatype", "fields": {}},
    {"pk": 1, "model": "metadata.compounddatatype", "fields": {}},
    {"pk": 2, "model": "metadata.compounddatatype", "fields": {}},
    {"pk": 3, "model": "metadata.compounddatatype", "fields": {}}]