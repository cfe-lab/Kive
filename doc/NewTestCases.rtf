{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green61\blue204;\red63\green105\blue30;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww29660\viewh11320\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf2 PipelineStep (Raw input related tests)
\b0 \
- Complete_clean: Check for quenching of raw inputs (Single/Several_Raw_Input_Tests)\
- Clean: Check for overquenching of raw inputs\
\

\b Pipeline (Raw output related tests)
\b0 \
- Check Pipeline.clean for indexing and naming collisions (With raw outmaps)\
- create_outputs:  RAW outputs are created by RAW outmaps\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf3 Modified create_outputs to also delete raw_outputs before regenerating\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf2 ParentDataset (Non-raw parents of a dataset which can itself be raw or non-raw)
\b0 \
- Test with raw and non-raw child (Good case)\
- parent_input belongs to the transformation of the PS producing the child raw/non-raw Dataset\
\
- Parent must "fit" with parent_input\
   - CDTs match\'85\
       - All min_row + max_row constraints are satisfied (Good)\
       - Parent has less rows than min_row (Bad)\
       - Parent has more rows than max_row (Bad)\
   - CDT of dataset matches provider_output CDT (Good)\
   - CDT of dataset does not match provider_output CDT (Bad)\cf0 \
\

\b \cf2 RawParentDataset
\b0 \
 - Test that parent_raw_input is a pipeline input of the generating pipeline \
(because raw parents can only ever come from the generating pipeline's inputs)\cf0 \
\

\b \cf2 Dataset
\b0 \cf0 \
\cf2 - Dataset.clean(): check whether number of rows matches producing PS TransformationOutput or pipeline input min_row/max_row\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf2 Tests to be done
\b0 \
\pard\tx940\tx1440\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li1440\fi-1440\pardirnatural
\ls1\ilvl1\cf2 \uc0\u8259  AbstractDataset.complete_clean(): check quenching of this transformation input by parent datasets\
   - non-raw inputs\
   - raw inputs\cf0 \
\
Note: All of the Dataset-related clean() functions check pipeline results *as it is executed*, as opposed to the Pipeline-related clean() functions, which check that the Pipeline is laid out correctly in theory; this wouldn't catch bugs in the actual CodeResourceRevisions, for example.}